{"version":3,"sources":["components/Navbar.js","helpers/default_problems.js","components/ProblemsList.js","helpers/strategies.js","helpers/solution_editors.js","components/Editor.js","components/ProblemSuggestion.js","helpers/descriptions.js","components/ProblemSuggestions.js","components/Test.js","helpers/default_editors.js","helpers/test_params.js","components/EditorControl.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","react_default","a","createElement","className","href","onClick","changePage","Component","default_problems","problem_names","ProblemsList","handleProblemSelection","index","setState","clickedProblem","callback","state","problems","_this2","Grid","container","item","xs","map","problem","loadProblem","concat","variableNames","KEYWORD_REGEX","OBJECT_REGEX","METHOD_REGEX","FUNCTION_REGEX","STRING_REGEX","WALL_REGEX","VARIABLE_REGEX","COMMENT_REGEX","findWithRegex","regex","contentBlock","matchArr","start","message","arguments","length","undefined","text","getText","exec","compositeDecorator","Draft","strategy","contentState","component","react","style","color","children","variable","decoratedText","split","includes","push","solution_editors","entityMap","blocks","key","type","depth","entityRanges","data","createWithRawContent","hasCommandModifier","rawSampleJson","createWithContent","Editor","saveEditorState","editorState","getCurrentContent","rawJson","handleSaveEditor","problemIndex","setLineNums","lineNums","getBlocksAsArray","JSON","stringify","getPlainText","getNewSelection","offset","focusOffset","getSelection","merge","anchorOffset","setSelection","newSelection","newEditorState","forceSelection","editorStateChanged","reverseTab","lengthOfSelect","lengthOfReverse","currentState","oldFocus","getStartOffset","oldOffset","newOffset","newFocus","oldSelection","newContentState","moveText","checkForEndKey","lineNum","getCurrentLine","possibleKeyword","getLineText","replace","getCurrentWord","result","pop","checkForKeys","checkPossibleSuggestions","splitCurrentBlock","splitBlock","handleReturn","offNum","newScopeStarted","lastWasReturn","spaces","findScopeIndentationOfLine","replaceText","handleTab","e","possibleSuggestions","preventDefault","currentWord","sugg","restOfWord","substring","currentBlockKey","getStartKey","getBlockMap","keySeq","findIndex","k","i","lineText","lineStartedScope","lineEndedScope","prevLine","match","content","lastWasD","unIndentLine","currentLine","indentLength","search","suggestions","forEach","hideShowSolution","solutionShow","nextEditorContent","editor","default_editors","toggleSolution","newShow","keyBindingFn","bind","assertThisInitialized","firstEditor","prevProps","keyCode","lineNumsOutput","toString","handleRunCode","onChange","onTab","React","ProblemSuggestion","handleClick","selected","selectedStyle","problemName","descriptions","example","ProblemSuggestions","handleProblemChange","ProblemSuggestion_ProblemSuggestion","SetSelectionForm","_this3","htmlFor","id","placeholder","value","Number","parseInt","target","testInputs","testDescriptions","expectedOutputs","EditorControl","currentEditor","pid","currentProblem","loading","axios","post","function_name","toLowerCase","problem_index","then","response","firstCallToAPi","console","log","formatCodeOutput","catch","error","codeOutput","tests","output","passedCount","failedCount","test","testInput","testDescription","testOutput","expectedOutput","passedTest","testColor","passedColor","unshift","newIndex","_this$state","savedTests","newSavedTests","slice","newOutput","editorToSave","editors","savedEditors","selectedProblem","direction","ProblemSuggestions_ProblemSuggestions","Editor_Editor","width","height","display","justifyContent","alignItems","react_loader_spinner_default","App","pageName","currentPage","problemNumber","get","spacing","components_Navbar","components_ProblemsList","components_EditorControl","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iVA4BeA,sBAxBb,SAAAA,EAAYC,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACXH,0EAGA,IAAAO,EAAAJ,KACN,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,eAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAIC,QAAS,kBAAMN,EAAKP,MAAMc,WAAW,kBAAjD,aAEFN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAfJI,cCHRC,UAAmB,CAC9B,UACA,mBACA,gBACA,YAGWC,EAAgB,CAC3B,UACA,cACA,WACA,0BCyDaC,cA9Db,SAAAA,EAAYlB,GAAO,IAAAO,EAAA,OAAAN,OAAAC,EAAA,EAAAD,CAAAE,KAAAe,IACjBX,EAAAN,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiB,GAAAZ,KAAAH,KAAMH,KAORmB,uBAAyB,SAACC,GACxBb,EAAKc,SAAS,CACZC,eAAgBF,IAElBb,EAAKP,MAAMuB,SAASH,IAVpBb,EAAKiB,MAAQ,CACXC,SAAUR,EACVK,eAAgB,GAJDf,wEAeX,IAAAmB,EAAAvB,KAEN,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,WAAS,GACbpB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,IAEbtB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACftB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,WAAS,GACbpB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SAGAtB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,cAGAtB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,eAKH3B,KAAKqB,MAAMC,SAASM,IAAI,SAACC,EAASZ,GAAV,OACrBZ,EAAAC,EAAAC,cAAA,KAAGG,QAAS,kBAAMa,EAAK1B,MAAMiC,YAAYb,KACrCZ,EAAAC,EAAAC,cAAA,OAAKC,UAAS,UAAAuB,OAAYd,EAAM,IAC9BZ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,WAAS,GACbpB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACZE,GAEHxB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACZE,GAEHxB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACZE,SAOfxB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,aAvDIf,qBCFdoB,UAAgB,IACvBC,EAAgB,gEAChBC,EAAe,sBACfC,EAAe,sBACfC,EAAiB,8BACjBC,EAAe,oBACfC,EAAa,sBACbC,EAAiB,oCACjBC,EAAgB,OAqEtB,SAASC,EAAcC,EAAOC,EAAcvB,GAG1C,IAHkE,IAE9DwB,EAAUC,EAFsCC,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACxDG,EAAOP,EAAaQ,UAEe,QAAjCP,EAAWF,EAAMU,KAAKF,KAC5BL,EAAQD,EAAS3B,MACD,QAAZ6B,EACF1B,EAASyB,EAAQ,EAAGA,EAAQ,EAAID,EAAS,GAAGI,OAAS,GAChC,aAAZF,EACT1B,EAASyB,EAAOA,EAAQD,EAAS,GAAGI,OAAS,GACxB,aAAZF,EACLF,EAAS,IAAMA,EAAS,GAAG,IAAyB,MAAnBA,EAAS,GAAG,GAE/CxB,IADEyB,EACcA,EAAQD,EAAS,GAAGI,OAAS,GAE7C5B,EAASyB,EAAOA,EAAQD,EAAS,GAAGI,OAAS,GAG/C5B,EAASyB,EAAOA,EAAQD,EAAS,GAAGI,QAKnC,IAAMK,EAAqB,IAAIC,qBAAyB,CAC7D,CACEC,SA5BJ,SAAyBZ,EAAcvB,EAAUoC,GAC/Cf,EAAcD,EAAeG,EAAcvB,EAAU,KA4BnDqC,UA9DgB,SAAA5D,GAClB,OAAO6D,EAAA,sBAAMC,MAAO,CAAEC,MAAO,SAAW/D,EAAMgE,YA+D9C,CACEN,SA5DJ,SAAyBZ,EAAcvB,EAAUoC,GAC/Cf,EAAcR,EAAeU,EAAcvB,IA4DzCqC,UAhGgB,SAAA5D,GAClB,OAAO6D,EAAA,sBAAMC,MAAO,CAAEC,MAAO,WAAa/D,EAAMgE,YAiGhD,CACEN,SApDJ,SAA0BZ,EAAcvB,EAAUoC,GAChDf,EAAcL,EAAgBO,EAAcvB,EAAU,aAoDpDqC,UAxFiB,SAAA5D,GACnB,OAAO6D,EAAA,sBAAMC,MAAO,CAAEC,MAAO,SAAW/D,EAAMgE,YAyF9C,CACEN,SA5DJ,SAAwBZ,EAAcvB,EAAUoC,GAC9Cf,EAAcN,EAAcQ,EAAcvB,EAAU,QA4DlDqC,UAhGe,SAAA5D,GACjB,OAAO6D,EAAA,sBAAMC,MAAO,CAAEC,MAAO,QAAU/D,EAAMgE,YAiG7C,CACEN,SApEJ,SAAwBZ,EAAcvB,EAAUoC,GAC9Cf,EAAcP,EAAcS,EAAcvB,EAAU,aAoElDqC,UAxGe,SAAA5D,GACjB,OAAO6D,EAAA,sBAAMC,MAAO,CAAEC,MAAO,UAAY/D,EAAMgE,YAyG/C,CACEN,SA5DJ,SAAwBZ,EAAcvB,EAAUoC,GAC9Cf,EAAcJ,EAAcM,EAAcvB,EAAU,KA4DlDqC,UAhGe,SAAA5D,GACjB,OAAO6D,EAAA,sBAAMC,MAAO,CAAEC,MAAO,UAAY/D,EAAMgE,YAiG/C,CACEN,SA5DJ,SAAsBZ,EAAcvB,EAAUoC,GAC5Cf,EAAcH,EAAYK,EAAcvB,EAAU,KA4DhDqC,UAhGa,SAAA5D,GACf,OAAO6D,EAAA,sBAAMC,MAAO,CAAEC,MAAO,UAAY/D,EAAMgE,YAiG/C,CACEN,SA5DJ,SAA0BZ,EAAcvB,EAAUoC,GAChDf,EAAcF,EAAgBI,EAAcvB,EAAU,KA4DpDqC,UAhGiB,SAAA5D,GACnB,IAAMiE,EAAWjE,EAAMkE,cAAcC,MAAM,KAAK,GAEhD,OADKhC,EAAciC,SAASH,IAAW9B,EAAckC,KAAKJ,GACnDJ,EAAA,sBAAMC,MAAO,CAAEC,MAAO,UAAY/D,EAAMgE,cCxCpCM,EAAmB,CAC9B,CACEC,UAAW,GACXC,OAAQ,CACN,CACEC,IAAK,QACLpB,KAAM,kDACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,4BACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAGR,CACEJ,IAAK,QACLpB,KAAM,2BACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,sCACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,0CACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,yCACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,gCACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,kBACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,cACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,UACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,MACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,MAIZ,CACEN,UAAW,GACXC,OAAQ,CACN,CACEC,IAAK,QACLpB,KAAM,yBACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,sBACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,6BACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,2BACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,yCACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,kCACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,MACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,MAIZ,CACEN,UAAW,GACXC,OAAQ,CACN,CACEC,IAAK,QACLpB,KAAM,6CACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,sBACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAGR,CACEJ,IAAK,QACLpB,KAAM,qCACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,mCACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,wCACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,8BACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,MACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,OACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,0BACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,0BACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,sCACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,8BACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,UACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,YACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,MACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,MAIZ,CACEN,UAAW,GACXC,OAAQ,CACN,CACEC,IAAK,QACLpB,KAAM,mCACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,+BACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,mBACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,0BACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,sCACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,sCACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,UACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,qBACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,MACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,OCxVRC,GAJyBrB,iBAAvBsB,mBAIqB,SAAAC,GAC3B,IAAMrB,EAAeF,iBAAqBuB,GAK1C,OAJuBvB,cAAkBwB,kBACvCtB,EACAH,KAOiB0B,cACnB,SAAAA,EAAYlF,GAAO,IAAAO,EAAAN,OAAAC,EAAA,EAAAD,CAAAE,KAAA+E,IACjB3E,EAAAN,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiF,GAAA5E,KAAAH,KAAMH,KAwCRmF,gBAAkB,WACd,IAAMxB,EAAepD,EAAKiB,MAAM4D,YAAYC,oBACtCC,EAAU7B,eAAmBE,GACnCpD,EAAKP,MAAMuF,iBAAiBD,EAAS/E,EAAKiB,MAAMgE,eA5CjCjF,EAgDnBkF,YAAc,WACZ,IAAMC,EAAWnF,EAAKiB,MAAM4D,YACzBC,oBACAM,mBAAmBxC,OACtB5C,EAAKc,SAAS,CAAEqE,SAAUA,KApDTnF,EAuDnBoD,aAAe,WACb,IAAMA,EAAepD,EAAKiB,MAAM4D,YAAYC,oBACtCC,EAAU7B,eAAmBE,GACnBiC,KAAKC,UAAUP,EAAS,KAAM,GAC5B3B,EAAamC,gBA3DdvF,EA8DnBwF,gBAAkB,SAACC,EAAQC,GAGzB,OAFwB1F,EAAKiB,MAArB4D,YAC2Bc,eACbC,MAAM,CAC1BC,aAAcJ,EACdC,YAAaA,KAnEE1F,EAuEnB8F,aAAe,SAACL,EAAgBC,GAAwB,IAC9Cb,EAAgB7E,EAAKiB,MAArB4D,YAGFkB,EAFiBlB,EAAYc,eAECC,MAAM,CACxCC,aAAcJ,EACdC,YAAaA,IAGTM,EAAiB9C,cAAkB+C,eACvCpB,EACAkB,GAEF/F,EAAKkG,mBAAmBF,IApFPhG,EAuFnBmG,WAAa,SAACC,EAAgBC,GAC5B,IAAIC,EAAetG,EAAKiB,MAAM4D,YAExB0B,EADiBD,EAAaX,eACFa,iBAC5BC,EAAYF,EAAWH,EAEvBM,EAAYD,EAAYJ,EAAkB,EAAI,EAAII,EAAYJ,EAC9DM,EAAWD,EAAYN,EACvBQ,EAAe5G,EAAKwF,gBAAgBiB,EAAWF,GAC/CR,EAAe/F,EAAKwF,gBAAgBkB,EAAWC,GAEjDE,EAAkB3D,WAAe4D,SACnCR,EAAaxB,oBACb8B,EACAb,GAGF/F,EAAKc,SAAS,CACZ+D,YAAa3B,cAAkBY,KAC7BwC,EACAO,EACA,gBA5Ga7G,EAiHnB+G,eAAiB,WACf,IAAMC,EAAUhH,EAAKiH,iBAEfC,EADWlH,EAAKmH,YAAYH,GACDI,QAAQ,MAAO,IAChD,MAAwB,QAApBF,EAAkC,EACT,UAApBA,EAAoC,EAChB,SAApBA,EAAmC,EAChC,GAxHKlH,EA2HnBqH,eAAiB,WACf,IAAIC,EAGJ,OAFKA,EAAStH,EAAKmH,YAAYnH,EAAKiH,qBAClCK,EAASA,EAAO1D,MAAM,KAAK2D,OACtBD,GA/HUtH,EAgJnBkG,mBAAqB,SAACF,GACpBhG,EAAKc,SACH,CACE+D,YAAamB,GAEf,WACEhG,EAAKwH,eACLxH,EAAKkF,cACLlF,EAAKoD,eACLpD,EAAKyH,8BAzJQzH,EA8JnB0H,kBAAoB,WAClB,IAAIpB,EAAetG,EAAKiB,MAAM4D,YAC1BgC,EAAkB3D,WAAeyE,WACnCrB,EAAaxB,oBACbwB,EAAaX,gBAEf3F,EAAKc,SAAS,CACZ+D,YAAa3B,cAAkBY,KAC7BwC,EACAO,EACA,wBAxKa7G,EA+KnB4H,aAAe,SAACC,EAAQC,GACtB,IAAMd,EAAUhH,EAAKiH,iBACrBjH,EAAKc,SAAS,CAAEiH,eAAe,IAE/B,IAAIC,EAAShI,EAAKiI,2BAA2BjB,GACzCV,EAAetG,EAAKiB,MAAM4D,YAC1BgC,EAAkB3D,WAAegF,YACnC5B,EAAaxB,oBACbwB,EAAaX,eACbqC,GAGFhI,EAAKc,SAAS,CACZ+D,YAAa3B,cAAkBY,KAC7BwC,EACAO,EACA,wBA/La7G,EAoMnBmI,UAAY,SAAAC,GAAK,IACPC,EAAwBrI,EAAKiB,MAA7BoH,oBACJD,GAAGA,EAAEE,iBACT,IACIzB,EADAP,EAAetG,EAAKiB,MAAM4D,YAE9B,GAAIwD,EAAoBzF,OAAQ,CAE9B,IAAM2F,EAAcvI,EAAKqH,iBACnBmB,EAAOH,EAAoB,GAC3BI,EAAaD,EAAKE,UAAUH,EAAY3F,OAAQ4F,EAAK5F,QAC3DiE,EAAkB3D,WAAegF,YAC/B5B,EAAaxB,oBACbwB,EAAaX,eACb8C,QAGF5B,EAAkB3D,WAAegF,YAC/B5B,EAAaxB,oBACbwB,EAAaX,eACb,QAGJ3F,EAAKc,SAAS,CACZ+D,YAAa3B,cAAkBY,KAC7BwC,EACAO,EACA,wBA9Na7G,EAmOnBiH,eAAiB,WACf,IAAM0B,EAAkB3I,EAAKiB,MAAM4D,YAAYc,eAAeiD,cAM9D,OAL0B5I,EAAKiB,MAAM4D,YAClCC,oBACA+D,cACAC,SACAC,UAAU,SAAAC,GAAC,OAAIA,IAAML,KAzOP3I,EA6OnBiI,2BAA6B,SAAAjB,GAE3B,IADA,IAAIgB,EAAS,GACLiB,EAAI,EAAGA,EAAIjC,IAAWiC,EAAE,CAC9B,IAAMC,EAAWlJ,EAAKmH,YAAY8B,GAC/BjJ,EAAKmJ,iBAAiBD,KACvBlB,GAAU,QAEThI,EAAKoJ,eAAeF,IAClBlB,EAAOpF,OAAS,IACjBoF,EAASA,EAAOU,UAAU,EAAGV,EAAOpF,OAAO,IAGjD,OAAOoF,GAzPUhI,EA4PnBmJ,iBAAmB,SAAAE,GACjB,OAAwD,OAAjDA,EAASC,MAAM,+BA7PLtJ,EAgQnBoJ,eAAiB,SAAAC,GACf,OAAwC,OAAjCA,EAASC,MAAM,eAjQLtJ,EAoQnBmH,YAAc,SAAAH,GACZ,IAAIuC,EAAUvJ,EAAKiB,MAAM4D,YAAYC,oBAAoBM,mBACvD4B,GAEF,OAAIuC,EACKA,EAAQzG,KAEV,MA3QU9C,EA8QnBwH,aAAe,WAEb,GAAIxH,EAAKiB,MAAM8G,cACb/H,EAAK4H,oBACA,GAAI5H,EAAKiB,MAAMuI,SAAU,CAC9BxJ,EAAKc,SAAS,CAAE0I,UAAU,IAC1B,IAAMlC,EAAStH,EAAK+G,iBAEL,IAAXO,GACFtH,EAAKyJ,aAAazJ,EAAKiH,iBAAkBK,KAvR5BtH,EA4RnByJ,aAAe,SAACC,EAAapC,GAC3B,IAAIU,EAAShI,EAAKiI,2BAA2ByB,GACvCC,EAAe3B,EAAOpF,OAAS,EAAI,EAAI,EAAGoF,EAAOpF,OAAS,EAE1D6C,EADWzF,EAAKmH,YAAYuC,GACVE,OAAO,MAC/B5J,EAAKmG,WAAWmB,EAAQ7B,EAAOkE,IAjSd3J,EAoSnByH,yBAA2B,WACzB,IAAMc,EAAcvI,EAAKqH,iBACzB,GAAoB,KAAhBkB,EAAJ,CACA,IAAMsB,EAAc,GACpBjI,EAAckI,QAAQ,SAASpG,GACzBA,EAASG,SAAS0E,IACpBsB,EAAY/F,KAAKJ,KAIrB1D,EAAKc,SAAS,CACZuH,oBAAqBwB,MA/SN7J,EAoTnB+J,iBAAmB,SAACC,GAClB,IAAIC,EAAmBC,EACpBF,GACDE,EAASnG,EAAiB/D,EAAKP,MAAMwF,cACrCgF,EAAoB1F,EAAqB2F,KAEzCA,EAASlK,EAAKP,MAAM0K,gBAAgBnK,EAAKP,MAAMwF,cAC/CgF,EAAoB1F,EAAqB2F,IAE3ClK,EAAKc,SAAS,CACZ+D,YAAaoF,EACb9E,SAAU+E,EAAOjG,OAAOrB,UA/TT5C,EAmUnBoK,eAAiB,WACf,IAAMC,GAAWrK,EAAKiB,MAAM+I,aAC5BhK,EAAKc,SAAS,CAAEkJ,aAAcK,GAAUrK,EAAK+J,iBAAiBM,KAnU9DrK,EAAKsK,aAAetK,EAAKsK,aAAaC,KAAlB7K,OAAA8K,EAAA,EAAA9K,CAAAM,IAEpB,IAAMkK,EAASlK,EAAKP,MAAM0K,gBAAgBnK,EAAKP,MAAMwF,cAC/CwF,EAAclG,EAAqB2F,GALxB,OAOjBlK,EAAKiB,MAAQ,CAEX4D,YAAa4F,EACbtF,SAAU+E,EAAOjG,OAAOrB,OACxBE,KAAM,GACNiF,eAAe,EACfyB,UAAU,EACVnB,oBAAqBzG,EACrBqD,aAAcjF,EAAKP,MAAMwF,aACzB+E,cAAc,GAhBChK,kFAsBA0K,GACjB,GAAGA,EAAUzF,eAAiBrF,KAAKH,MAAMwF,aAAa,CACpDrF,KAAKgF,kBACL,IAAMsF,EAAStK,KAAKH,MAAM0K,gBAAgBvK,KAAKH,MAAMwF,cAC/CgF,EAAoB1F,EAAqB2F,GAC5CtK,KAAKqB,MAAM+I,cAAcpK,KAAKmK,kBAAiB,GAClDnK,KAAKkB,SAAS,CACZkJ,cAAc,EACdnF,YAAaoF,EACb9E,SAAU+E,EAAOjG,OAAOrB,OACxBqC,aAAcrF,KAAKH,MAAMwF,8DAM7BrF,KAAKgF,uDA4FMwD,GAWX,OAVkB,KAAdA,EAAEuC,SAAgC,KAAdvC,EAAEuC,SAAgC,KAAdvC,EAAEuC,SAE5C/K,KAAKkB,SAAS,CAAE0I,UAAU,IAIV,KAAdpB,EAAEuC,SAEJ/K,KAAKkB,SAAS,CAAEiH,eAAe,IAE1B7E,uBAA2BkF,oCA8LlC,IAHO,IAAAjH,EAAAvB,KACDgL,EAAiB,GAEd3B,GADuBrJ,KAAKqB,MAA7BoH,oBACK,GAAGY,GAAKrJ,KAAKqB,MAAMkE,WAAY8D,EAC1C2B,EAAe9G,KACbR,EAAA,qBAAKlD,UAAU,cAAc8D,IAAK+E,EAAE4B,YACjC5B,EAAE4B,aAMT,OACIvH,EAAA,qBAAKlD,UAAU,UACbkD,EAAA,qBAAKlD,UAAU,kBACbkD,EAAA,wBAAQlD,UAAU,aAAaE,QAAS,kBAAMa,EAAK1B,MAAMqL,cAAc3J,EAAKF,MAAM4D,YAAYC,uBAA9F,YACAxB,EAAA,wBAAQlD,UAAU,kBAAkBE,QAAS,kBAAMa,EAAKiJ,mBACtDxK,KAAKqB,MAAM+I,aAA2C1G,EAAA,2CAA5BA,EAAA,6CAG9BA,EAAA,qBAAKlD,UAAU,cACbkD,EAAA,qBAAKlD,UAAU,gBAAgBwK,GAC/BtH,EAAA,cAACJ,EAAA,OAAD,CACE2B,YAAajF,KAAKqB,MAAM4D,YACxBkG,SAAUnL,KAAKsG,mBACf8E,MAAOpL,KAAKuI,UACZmC,aAAc1K,KAAK0K,wBAnWGW,aCnBfC,cACnB,SAAAA,EAAYzL,GAAO,IAAAO,EAAA,OAAAN,OAAAC,EAAA,EAAAD,CAAAE,KAAAsL,IACjBlL,EAAAN,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwL,GAAAnL,KAAAH,KAAMH,KAcR0L,YAAc,WACZnL,EAAKP,MAAMuB,SAAShB,EAAKP,MAAMoB,QAd/Bb,EAAKiB,MAAQ,CACXmK,SAAUpL,EAAKP,MAAM2L,UAHNpL,kFAOA0K,GACdA,EAAUU,WAAaxL,KAAKH,MAAM2L,UACjCxL,KAAKkB,SAAS,CACVsK,SAAUxL,KAAKH,MAAM2L,4CASvB,IAAAjK,EAAAvB,KACAyL,EAAgBzL,KAAKqB,MAAMmK,SAAW,gBAAkB,GAC9D,OACEnL,EAAAC,EAAAC,cAAA,OAAKC,UAAS,qBAAAuB,OAAuB0J,GAAiB/K,QAAS,kBAAMa,EAAKgK,gBACvEvL,KAAKH,MAAM6L,oBAxB2BL,IAAMzK,WCHxC+K,EAAe,CAC1B,CACEhC,QAAS,wNACTiC,QAAS,kGAGX,CACEjC,QAAS,6LACTiC,QAAO,yDAGT,CACEjC,QAAS,qFACTiC,QAAO,qDAGT,CACEjC,QAAO,+FACPiC,QAAO,gECXUC,cACnB,SAAAA,EAAYhM,GAAO,IAAAO,EAAA,OAAAN,OAAAC,EAAA,EAAAD,CAAAE,KAAA6L,IACjBzL,EAAAN,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+L,GAAA1L,KAAAH,KAAMH,KAORiM,oBAAsB,SAAC7K,GACrBb,EAAKc,SAAS,CACZC,eAAgBF,IAElBb,EAAKP,MAAMuB,SAASH,IAVpBb,EAAKiB,MAAQ,CACXC,SAAUR,EACVK,eAAgBf,EAAKP,MAAMwF,cAJZjF,wEAeX,IAAAmB,EAAAvB,KACN,OAEEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZR,KAAKqB,MAAMC,SAASM,IAAI,SAACC,EAASZ,GAAV,OACvBZ,EAAAC,EAAAC,cAACwL,EAAD,CACE3K,SAAUG,EAAKuK,oBACfN,SAAUjK,EAAKF,MAAMF,iBAAmBF,EACxCyK,YAAanK,EAAKF,MAAMC,SAASL,GACjCA,MAAOA,MAGXZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACZH,EAAAC,EAAAC,cAAA,SACEoL,EAAa3L,KAAKqB,MAAMF,gBAAgBwI,SAE1CtJ,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SACEoL,EAAa3L,KAAKqB,MAAMF,gBAAgByK,kBAlCLP,IAAMzK,WC0GhDoL,GA9G0CX,uNA+G9ChK,MAAQ,CACNwE,OAAQ,EACRC,YAAa,2EAEN,IAAAmG,EAAAjM,KACP,OACE0D,EAAA,qBAAKlD,UAAU,kBACbkD,EAAA,qBAAKlD,UAAU,cACbkD,EAAA,uBAAOwI,QAAQ,OAAO1L,UAAU,0BAAhC,UAGAkD,EAAA,qBAAKlD,UAAU,YACbkD,EAAA,uBACEa,KAAK,SACL/D,UAAU,eACV2L,GAAG,OACHC,YAAY,eACZC,MAAOrM,KAAKqB,MAAMwE,OAClBsF,SAAU,SAAA3C,GAAC,OAAIyD,EAAK/K,SAAS,CAAE2E,OAAQyG,OAAOC,SAAS/D,EAAEgE,OAAOH,cAKtE3I,EAAA,qBAAKlD,UAAU,cACbkD,EAAA,uBAAOwI,QAAQ,OAAO1L,UAAU,0BAAhC,cAGAkD,EAAA,qBAAKlD,UAAU,YACbkD,EAAA,uBACEa,KAAK,SACL/D,UAAU,eACV2L,GAAG,OACHC,YAAY,eACZC,MAAOrM,KAAKqB,MAAMyE,YAClBqF,SAAU,SAAA3C,GAAC,OAAIyD,EAAK/K,SAAS,CAAE4E,YAAawG,OAAOC,SAAS/D,EAAEgE,OAAOH,cAI3E3I,EAAA,wBACElD,UAAU,kCACVE,QAAS,kBAAMuL,EAAKpM,MAAMuB,SAAS6K,EAAK5K,MAAMwE,OAAQoG,EAAK5K,MAAMyE,eAFnE,+BAvCuBuF,cCjHlBd,EAAkB,CAC7B,CACEnG,UAAW,GACXC,OAAQ,CACN,CACEC,IAAK,QACLpB,KAAM,kDACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,4BACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAGR,CACEJ,IAAK,QACLpB,KAAM,2BACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,OACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,OACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,MACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,MAIZ,CACEN,UAAW,GACXC,OAAQ,CACN,CACEC,IAAK,QACLpB,KAAM,yBACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,sBACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,6BACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,OACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,OACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,MACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,MAIZ,CACEN,UAAW,GACXC,OAAQ,CACN,CACEC,IAAK,QACLpB,KAAM,6CACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,sBACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAGR,CACEJ,IAAK,QACLpB,KAAM,qCACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,OACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,OACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,MACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,MAIZ,CACEN,UAAW,GACXC,OAAQ,CACN,CACEC,IAAK,QACLpB,KAAM,mCACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,+BACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,mBACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,OACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,OACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,IAER,CACEJ,IAAK,QACLpB,KAAM,MACNqB,KAAM,WACNC,MAAO,EACPC,aAAc,GACdC,KAAM,OCnND+H,EAAa,CACxB,CAAC,wBAAyB,8BAA+B,kCACzD,CAAC,QAAS,SAAU,kCACpB,CAAC,mBAAwB,qBAA0B,oBACnD,CAAC,UAAW,YAAa,iBAIdC,EAAmB,CAC9B,CAAC,uBAAwB,4BAA6B,gBACtD,CAAC,oBAAqB,wBAAyB,wCAC/C,CAAC,gBAAiB,eAAgB,kBAClC,CAAC,0BAA2B,gBAAiB,gCAGlCC,EAAkB,CAC7B,CAAC,SAAU,SAAU,UACrB,CAAC,QAAS,OAAQ,QAClB,CAAC,OAAQ,OAAO,SAChB,CAAC,YAAa,eAAgB,kCC6HjBC,cAlIb,SAAAA,EAAY/M,GAAM,IAAAO,EAAA,OAAAN,OAAAC,EAAA,EAAAD,CAAAE,KAAA4M,IAChBxM,EAAAN,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8M,GAAAzM,KAAAH,KAAMH,KAYRqL,cAAgB,SAAC2B,GACf,IAAM1H,EAAU7B,eAAmBuJ,GAC7BC,EAAM1M,EAAKiB,MAAM0L,eACvB3M,EAAKc,SAAS,CAAE8L,SAAS,IACzBC,IAAMC,KAAK,4CAA8C,CAACC,cAAetM,EAAiBiM,GAAKM,cAAezD,QAASxE,EAASkI,cAAejN,EAAKiB,MAAM0L,iBAEpJO,KAAK,SAAAC,GACJnN,EAAKc,SAAS,CACZ8L,SAAS,EACTQ,gBAAgB,IAElBC,QAAQC,IAAI,YAAaH,EAAS7I,MAClCtE,EAAKuN,iBAAiBJ,EAAS7I,QAEhCkJ,MAAM,SAAAC,GACLzN,EAAKc,SAAS,CACZ4M,WAAY,eACZd,SAAS,EACTQ,gBAAgB,IAElBC,QAAQC,IAAI,QAASG,EAAMN,aAjClBnN,EAqClBuN,iBAAmB,SAACI,GAClB,IAAIC,EAAS,GACTC,EAAc,EACdC,EAAc,EAElBH,EAAM7D,QAAQ,SAACiE,EAAMlN,GACnB,IAAImN,EAAY3B,EAAWrM,EAAKiB,MAAM0L,gBAAgB9L,GAClDoN,EAAkB3B,EAAiBtM,EAAKiB,MAAM0L,gBAAgB9L,GAC9DqN,EAAaH,GAAa,gCAC1BI,EAAiB5B,EAAgBvM,EAAKiB,MAAM0L,gBAAgB9L,GAC5DuN,EAAaD,GAAkBD,EAChCE,IACCP,IAEAC,EAEJ,IAAMO,EAAYD,EAAa,QAAS,MAExCR,EAAO9J,KAAK7D,EAAAC,EAAAC,cAAA,8BAAuB8N,IACnCL,EAAO9J,KAAK7D,EAAAC,EAAAC,cAAA,mBAAY6N,IACxBJ,EAAO9J,KAAK7D,EAAAC,EAAAC,cAAA,KAAGoD,MAAO,CAACC,MAAO6K,IAAlB,oBAAgDF,IAC5DP,EAAO9J,KAAK7D,EAAAC,EAAAC,cAAA,KAAGoD,MAAO,CAACC,MAAO6K,IAAlB,WAAuCH,IACnDN,EAAO9J,KAAK7D,EAAAC,EAAAC,cAAA,cAEd,IAAMmO,EAA8B,IAAhBR,EAAoB,QAAS,MACjDF,EAAOW,QAAQtO,EAAAC,EAAAC,cAAA,0BACbF,EAAAC,EAAAC,cAAA,QAAMoD,MAAO,CAACC,MAAO8K,IAAeT,EAApC,IAAkDA,EAAcC,GAChE7N,EAAAC,EAAAC,cAAA,aACFH,EAAKc,SAAS,CAAE4M,WAAYE,KAjEZ5N,EAqElB0L,oBAAsB,SAAC8C,GAAa,IAAAC,EACezO,EAAKiB,MAA/C0L,EAD2B8B,EAC3B9B,eAAgB+B,EADWD,EACXC,WAAYhB,EADDe,EACCf,WAC7BiB,EAAgBD,EAAWE,QACjCD,EAAchC,GAAkBe,EAChC,IAAMmB,EAAYH,EAAWF,GAC7BxO,EAAKc,SAAS,CACZ6L,eAAgB6B,EAChBd,WAAYmB,EACZH,WAAYC,KA7EE3O,EAiFlBgF,iBAAmB,SAAC8J,EAAc7J,GAChC,IAAM8J,EAAU/O,EAAKiB,MAAM+N,aAAaJ,QACxCG,EAAQ9J,GAAgB6J,EACxB9O,EAAKc,SAAS,CACZkO,aAAcD,KAnFhB1B,QAAQC,IAAItN,EAAKP,MAAMwP,iBACvBjP,EAAKiB,MAAQ,CACX0L,eAAgB3M,EAAKP,MAAMwP,gBAC3BvB,WAAY,GACZgB,WAAY,CAAC,GAAI,GAAI,GAAI,GAAI,IAC7B9B,SAAS,EACTQ,gBAAgB,EAChB4B,aAAc7E,GATAnK,wEA2FhB,OAEEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,WAAS,EAAC6N,UAAU,OACxBjP,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACXtB,EAAAC,EAAAC,cAACgP,EAAD,CAAoBnO,SAAUpB,KAAK8L,oBAAqBzG,aAAcrF,KAAKqB,MAAM0L,kBAEnF1M,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACbtB,EAAAC,EAAAC,cAACiP,EAAD,CAAQtE,cAAelL,KAAKkL,cAC1BX,gBAAiBvK,KAAKqB,MAAM+N,aAC5BhK,iBAAkBpF,KAAKoF,iBACvBC,aAAcrF,KAAKqB,MAAM0L,kBAG7B1M,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACXtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZR,KAAKqB,MAAM2L,QAAW3M,EAAAC,EAAAC,cAAA,OACpBoD,MAAO,CACJ8L,MAAO,OACPC,OAAQ,MACRC,QAAS,QACTC,eAAgB,SAChBC,WAAY,WAGdxP,EAAAC,EAAAC,cAACuP,EAAAxP,EAAD,CAAQiE,KAAK,YAAYX,MAAM,UAAU8L,OAAO,MAAMD,MAAM,QAC3DzP,KAAKqB,MAAMmM,gBAAkBnN,EAAAC,EAAAC,cAAA,4DAEjCP,KAAKqB,MAAMyM,WAAa9N,KAAKqB,MAAMyM,WAAazN,EAAAC,EAAAC,cAAA,QAAMoD,MAAO,CAACC,MAAO,SAArB,8CAzHrChD,aC8CbmP,cAjDb,SAAAA,EAAYlQ,GAAM,IAAAO,EAAA,OAAAN,OAAAC,EAAA,EAAAD,CAAAE,KAAA+P,IAChB3P,EAAAN,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiQ,GAAA5P,KAAAH,KAAMH,KAgBRc,WAAa,SAACqP,GACZ5P,EAAKc,SAAS,CAAC+O,YAAaD,KAlBZ5P,EAqBlB0B,YAAc,SAACoO,GACb9P,EAAKc,SAAS,CACZ+O,YAAa,SACbZ,gBAAiBa,KAtBnB9P,EAAKiB,MAAQ,CACXgO,gBAAiB,EACjBY,YAAa,gBAJC7P,oFAUhB6M,IAAMkD,IAAI,kDACH7C,KAAKG,QAAQC,IAAI,mBACjBE,MAAM,SAAAC,GACLJ,QAAQC,IAAI,4DAgBpB,OACErN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,WAAS,EAAC6N,UAAU,SAASc,QAAS,IAC1C/P,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACbtB,EAAAC,EAAAC,cAAC8P,EAAD,CAAQ1P,WAAYX,KAAKW,cAE3BN,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACe,iBAA3B3B,KAAKqB,MAAM4O,aAAkC5P,EAAAC,EAAAC,cAAC+P,EAAD,CAAcxO,YAAa9B,KAAK8B,cAClD,WAA3B9B,KAAKqB,MAAM4O,aAA4B5P,EAAAC,EAAAC,cAACgQ,EAAD,CAAelB,gBAAiBrP,KAAKqB,MAAMgO,mBAErFhP,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACbtB,EAAAC,EAAAC,cAAA,yBAzCMK,aCGE4P,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjH,MACvB,2DCZNkH,IAASC,OAAOxQ,EAAAC,EAAAC,cAACuQ,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7D,KAAK,SAAA8D,GACjCA,EAAaC","file":"static/js/main.c5ce1210.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport '../css/Navbar.css';\n\nclass Navbar extends Component {\n  constructor(props){\n    super(props)\n  }\n\n  render(){\n    return (\n      <div className=\"navbar\">\n        <div className=\"navbar-items\">\n          <div className=\"logo\">\n            Ruby Runner\n          </div>\n          <div className=\"navbar-item\">\n            <a href=\"#\" onClick={() => this.props.changePage(\"problemsList\")}>Problems</a>\n          </div>\n          <div className=\"navbar-item\">\n          </div>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","export const default_problems = [\n  \"two_sum\",\n  \"check_palindrome\",\n  \"check_anagram\",\n  \"reverse\"\n]\n\nexport const problem_names = [\n  \"Two Sum\",\n  \"Palindromes\",\n  \"Anagrams\",\n  \"Reverse Array\"\n]\n","import React, {Component} from 'react';\nimport '../css/ProblemsList.css';\nimport {problem_names} from '../helpers/default_problems'\nimport Grid from '@material-ui/core/Grid';\n\nclass ProblemsList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      problems: problem_names,\n      clickedProblem: 0\n    }\n  }\n\n  handleProblemSelection = (index) => {\n    this.setState({\n      clickedProblem: index\n    })\n    this.props.callback(index);\n  }\n\n  render(){\n    let bcolor = \"white\";\n    return (\n      <div className=\"problems-list\">\n        <Grid container>\n          <Grid item xs>\n          </Grid>\n          <Grid item xs={8}>\n          <div className=\"problem1 header\">\n            <Grid container>\n              <Grid item xs={3}>\n                Title\n              </Grid>\n              <Grid item xs={3}>\n                Difficulty\n              </Grid>\n              <Grid item xs={3}>\n                Something\n              </Grid>\n            </Grid>\n          </div>\n          {this.state.problems.map((problem, index) => (\n              <a onClick={() => this.props.loadProblem(index)}>\n                  <div className={`problem${index%2}`}>\n                    <Grid container>\n                      <Grid item xs={3}>\n                        {problem}\n                      </Grid>\n                      <Grid item xs={3}>\n                        {problem}\n                      </Grid>\n                      <Grid item xs={3}>\n                        {problem}\n                      </Grid>\n                    </Grid>\n                  </div>\n              </a>\n          ))}\n          </Grid>\n          <Grid item xs>\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default ProblemsList;\n","import * as React from \"react\";\nimport * as Draft from \"draft-js\";\n\nexport const variableNames = [];\nconst KEYWORD_REGEX = /\\b(def|end|if|do|elsif|else|while|for|return|puts|print|p)\\b/g;\nconst OBJECT_REGEX = /\\b([a-z]|[A-Z])+\\./g;\nconst METHOD_REGEX = /\\.([a-z]|[A-Z])+\\b/g;\nconst FUNCTION_REGEX = /(\\b|\\.)([a-z]|[A-Z]|\\_)+\\(/g;\nconst STRING_REGEX = /\"([a-z]|[A-Z])+\"/g;\nconst WALL_REGEX = /\\|([a-z]|[A-Z])+\\|/g;\nconst VARIABLE_REGEX = /\\b(\\_|[a-z]|[0-9]|[A-Z])+( |)\\= /g;\nconst COMMENT_REGEX = /#.*/g;\n\nconst KeywordSpan = props => {\n  return <span style={{ color: \"purple\" }}>{props.children}</span>;\n};\n\nconst ObjectSpan = props => {\n  return <span style={{ color: \"black\" }}>{props.children}</span>;\n};\n\nconst MethodSpan = props => {\n  return <span style={{ color: \"red\" }}>{props.children}</span>;\n};\n\nconst FunctionSpan = props => {\n  return <span style={{ color: \"blue\" }}>{props.children}</span>;\n};\n\nconst StringSpan = props => {\n  return <span style={{ color: \"green\" }}>{props.children}</span>;\n};\n\nconst WallSpan = props => {\n  return <span style={{ color: \"green\" }}>{props.children}</span>;\n};\n\nconst VariableSpan = props => {\n  const variable = props.decoratedText.split(\" \")[0];\n  if (!variableNames.includes(variable)) variableNames.push(variable);\n  return <span style={{ color: \"black\" }}>{props.children}</span>;\n};\n\nconst CommentSpan = props => {\n  return <span style={{ color: \"teal\" }}>{props.children}</span>;\n};\n\n\nfunction keywordStrategy(contentBlock, callback, contentState) {\n  findWithRegex(KEYWORD_REGEX, contentBlock, callback);\n}\n\nfunction objectStrategy(contentBlock, callback, contentState) {\n  findWithRegex(OBJECT_REGEX, contentBlock, callback, \"subtract\");\n}\n\nfunction methodStrategy(contentBlock, callback, contentState) {\n  findWithRegex(METHOD_REGEX, contentBlock, callback, \"add\");\n}\n\nfunction functionStrategy(contentBlock, callback, contentState) {\n  findWithRegex(FUNCTION_REGEX, contentBlock, callback, \"function\");\n}\n\nfunction stringStrategy(contentBlock, callback, contentState) {\n  findWithRegex(STRING_REGEX, contentBlock, callback, \"\");\n}\n\nfunction wallStrategy(contentBlock, callback, contentState) {\n  findWithRegex(WALL_REGEX, contentBlock, callback, \"\");\n}\n\nfunction variableStrategy(contentBlock, callback, contentState) {\n  findWithRegex(VARIABLE_REGEX, contentBlock, callback, \"\");\n}\n\nfunction commentStrategy(contentBlock, callback, contentState) {\n  findWithRegex(COMMENT_REGEX, contentBlock, callback, \"\");\n}\n\nfunction findWithRegex(regex, contentBlock, callback, message = \"\") {\n  const text = contentBlock.getText();\n  let matchArr, start;\n  while ((matchArr = regex.exec(text)) !== null) {\n    start = matchArr.index;\n    if (message === \"add\") {\n      callback(start + 1, start + 1 + matchArr[0].length - 1);\n    } else if (message === \"subtract\") {\n      callback(start, start + matchArr[0].length - 1);\n    } else if (message === \"function\") {\n      if (matchArr[0] && matchArr[0][0] && matchArr[0][0] === \".\") {\n        ++start;\n        callback(start, start + matchArr[0].length - 2);\n      } else {\n        callback(start, start + matchArr[0].length - 1);\n      }\n    } else {\n      callback(start, start + matchArr[0].length);\n    }\n  }\n}\n\nexport const compositeDecorator = new Draft.CompositeDecorator([\n  {\n    strategy: commentStrategy,\n    component: CommentSpan\n  },\n  {\n    strategy: keywordStrategy,\n    component: KeywordSpan\n  },\n  {\n    strategy: functionStrategy,\n    component: FunctionSpan\n  },\n  {\n    strategy: methodStrategy,\n    component: MethodSpan\n  },\n  {\n    strategy: objectStrategy,\n    component: ObjectSpan\n  },\n  {\n    strategy: stringStrategy,\n    component: StringSpan\n  },\n  {\n    strategy: wallStrategy,\n    component: WallSpan\n  },\n  {\n    strategy: variableStrategy,\n    component: VariableSpan\n  },\n]);\n","export const solution_editors = [\n  {\n    entityMap: {},\n    blocks: [\n      {\n        key: \"5h45a\",\n        text: \"# @param {Interger Array} arr, {Integer} target\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45b\",\n        text: \"# @return {Integer Array}\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n\n      {\n        key: \"5h45c\",\n        text: \"def two_sum(arr, target)\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45d\",\n        text: \"    arr.each_with_index do |ele, i|\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45e\",\n        text: \"        (i+1..arr.length-1).each do |x|\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45f\",\n        text: \"            if arr[i]+arr[x] == target\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45g\",\n        text: \"                return [i, x]\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45h\",\n        text: \"            end\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45i\",\n        text: \"        end\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45j\",\n        text: \"    end\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45k\",\n        text: \"end\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      }\n    ]\n  },\n  {\n    entityMap: {},\n    blocks: [\n      {\n        key: \"5h45a\",\n        text: \"# @param {String} word\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45b\",\n        text: \"# @return {Boolean}\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45l\",\n        text: \"def check_palindrome(word)\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45r\",\n        text: \"    word = word.downcase\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45x\",\n        text: \"    word = word.gsub(/[^0-9a-z]/i, '')\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h46x\",\n        text: \"    return word == word.reverse\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45t\",\n        text: \"end\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      }\n    ]\n  },\n  {\n    entityMap: {},\n    blocks: [\n      {\n        key: \"5h45a\",\n        text: \"# @param {String} mixedWord, {String} word\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45b\",\n        text: \"# @return {Boolean}\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n\n      {\n        key: \"5h45c\",\n        text: \"def check_anagram(mixedWord, word)\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45d\",\n        text: \"    count1 = count_letters(word)\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45e\",\n        text: \"    count2 = count_letters(mixedWord)\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45f\",\n        text: \"    return count1 == count2\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45p\",\n        text: \"end\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45o\",\n        text: \"    \",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45h\",\n        text: \"def count_letters(word)\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45i\",\n        text: \"    count = Hash.new(0)\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45j\",\n        text: \"    word.split('').each do |letter|\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45k\",\n        text: \"        count[:letter] += 1\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45l\",\n        text: \"    end\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45m\",\n        text: \"    count\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45n\",\n        text: \"end\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      }\n    ]\n  },\n  {\n    entityMap: {},\n    blocks: [\n      {\n        key: \"5h45a\",\n        text: \"# @param {Interger array []} arr\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45b\",\n        text: \"# @return {Integer array []}\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45c\",\n        text: \"def reverse(arr)\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45d\",\n        text: \"    reversed_array = []\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45e\",\n        text: \"    arr.each_with_index do |ele, i|\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45f\",\n        text: \"        reversed_array.unshift(ele)\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45g\",\n        text: \"    end\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45h\",\n        text: \"    reversed_array\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45i\",\n        text: \"end\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      }\n    ]\n  },\n];\n","import * as React from \"react\";\nimport * as Draft from \"draft-js\";\nimport axios from 'axios'\nimport \"../css/CodeContent.css\";\nimport {variableNames, compositeDecorator} from '../helpers/strategies.js'\nimport {solution_editors} from '../helpers/solution_editors.js'\n\nconst { hasCommandModifier } = Draft.KeyBindingUtil;\n\n\n\nconst createWithRawContent = rawSampleJson => {\n  const contentState = Draft.convertFromRaw(rawSampleJson);\n  const newEditorState = Draft.EditorState.createWithContent(\n    contentState,\n    compositeDecorator\n  );\n  return newEditorState;\n};\n\n\n\nexport default class Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.keyBindingFn = this.keyBindingFn.bind(this);\n\n    const editor = this.props.default_editors[this.props.problemIndex];\n    const firstEditor = createWithRawContent(editor)\n\n    this.state = {\n      // editorState: Draft.EditorState.createEmpty(compositeDecorator),\n      editorState: firstEditor,\n      lineNums: editor.blocks.length,\n      text: \"\",\n      lastWasReturn: false,\n      lastWasD: true,\n      possibleSuggestions: variableNames,\n      problemIndex: this.props.problemIndex,\n      solutionShow: false\n    };\n\n  }\n\n\n  componentDidUpdate(prevProps){\n    if(prevProps.problemIndex !== this.props.problemIndex){\n      this.saveEditorState()\n      const editor = this.props.default_editors[this.props.problemIndex];\n      const nextEditorContent = createWithRawContent(editor)\n      if(this.state.solutionShow) this.hideShowSolution(false)\n      this.setState({\n        solutionShow: false,\n        editorState: nextEditorContent,\n        lineNums: editor.blocks.length,\n        problemIndex: this.props.problemIndex\n      });\n    }\n  }\n\n  componentDidUnmount(){\n    this.saveEditorState()\n  }\n\n  saveEditorState = () => {\n      const contentState = this.state.editorState.getCurrentContent();\n      const rawJson = Draft.convertToRaw(contentState);\n      this.props.handleSaveEditor(rawJson, this.state.problemIndex)\n  }\n\n\n  setLineNums = () => {\n    const lineNums = this.state.editorState\n      .getCurrentContent()\n      .getBlocksAsArray().length;\n    this.setState({ lineNums: lineNums });\n  };\n\n  contentState = () => {\n    const contentState = this.state.editorState.getCurrentContent();\n    const rawJson = Draft.convertToRaw(contentState);\n    const jsonStr = JSON.stringify(rawJson, null, 1);\n    const plainText = contentState.getPlainText();\n  };\n\n  getNewSelection = (offset, focusOffset) => {\n    const { editorState } = this.state;\n    const selectionState = editorState.getSelection();\n    return selectionState.merge({\n      anchorOffset: offset,\n      focusOffset: focusOffset\n    });\n  };\n\n  setSelection = (offset: number, focusOffset: number) => {\n    const { editorState } = this.state;\n    const selectionState = editorState.getSelection();\n\n    const newSelection = selectionState.merge({\n      anchorOffset: offset,\n      focusOffset: focusOffset\n    });\n\n    const newEditorState = Draft.EditorState.forceSelection(\n      editorState,\n      newSelection\n    );\n    this.editorStateChanged(newEditorState);\n  };\n\n  reverseTab = (lengthOfSelect, lengthOfReverse) => {\n    let currentState = this.state.editorState;\n    let currentSelection = currentState.getSelection();\n    const oldFocus = currentSelection.getStartOffset();\n    const oldOffset = oldFocus - lengthOfSelect;\n\n    const newOffset = oldOffset - lengthOfReverse < 0 ? 0 : oldOffset - lengthOfReverse;\n    const newFocus = newOffset + lengthOfSelect;\n    const oldSelection = this.getNewSelection(oldOffset, oldFocus);\n    const newSelection = this.getNewSelection(newOffset, newFocus);\n\n    let newContentState = Draft.Modifier.moveText(\n      currentState.getCurrentContent(),\n      oldSelection,\n      newSelection\n    );\n\n    this.setState({\n      editorState: Draft.EditorState.push(\n        currentState,\n        newContentState,\n        \"move-text\"\n      )\n    });\n  };\n\n  checkForEndKey = () => {\n    const lineNum = this.getCurrentLine();\n    const lineText = this.getLineText(lineNum);\n    const possibleKeyword = lineText.replace(/\\s/g, \"\");\n    if (possibleKeyword === \"end\") return 3;\n    else if (possibleKeyword === \"elsif\") return 5;\n    else if (possibleKeyword === \"else\") return 4;\n    else return 0;\n  };\n\n  getCurrentWord = () => {\n    let result;\n    if ((result = this.getLineText(this.getCurrentLine())))\n      result = result.split(\" \").pop();\n    return result;\n  };\n\n  keyBindingFn(e: SyntheticKeyboardEvent): string {\n    if (e.keyCode === 68 || e.keyCode === 70 || e.keyCode === 69) {\n      // key: D\n      this.setState({ lastWasD: true });\n      //check if end is only word on line\n    }\n\n    if (e.keyCode === 13) {\n      // key: return\n      this.setState({ lastWasReturn: true });\n    }\n    return Draft.getDefaultKeyBinding(e);\n  }\n\n  editorStateChanged = (newEditorState: Draft.EditorState) => {\n    this.setState(\n      {\n        editorState: newEditorState\n      },\n      () => {\n        this.checkForKeys();\n        this.setLineNums();\n        this.contentState();\n        this.checkPossibleSuggestions();\n      }\n    );\n  };\n\n  splitCurrentBlock = () => {\n    let currentState = this.state.editorState;\n    let newContentState = Draft.Modifier.splitBlock(\n      currentState.getCurrentContent(),\n      currentState.getSelection()\n    ); // need to split the block;\n    this.setState({\n      editorState: Draft.EditorState.push(\n        currentState,\n        newContentState,\n        \"insert-characters\"\n      )\n    });\n  };\n\n\n\n  handleReturn = (offNum, newScopeStarted) => {\n    const lineNum = this.getCurrentLine();\n    this.setState({ lastWasReturn: false });\n\n    let spaces = this.findScopeIndentationOfLine(lineNum);\n    let currentState = this.state.editorState;\n    let newContentState = Draft.Modifier.replaceText(\n      currentState.getCurrentContent(),\n      currentState.getSelection(),\n      spaces\n    );\n\n    this.setState({\n      editorState: Draft.EditorState.push(\n        currentState,\n        newContentState,\n        \"insert-characters\"\n      )\n    });\n  };\n\n  handleTab = e => {\n    const { possibleSuggestions } = this.state;\n    if (e) e.preventDefault();\n    let currentState = this.state.editorState;\n    let newContentState;\n    if (possibleSuggestions.length) {\n      //need to print first in arr\n      const currentWord = this.getCurrentWord();\n      const sugg = possibleSuggestions[0];\n      const restOfWord = sugg.substring(currentWord.length, sugg.length);\n      newContentState = Draft.Modifier.replaceText(\n        currentState.getCurrentContent(),\n        currentState.getSelection(),\n        restOfWord\n      );\n    } else {\n      newContentState = Draft.Modifier.replaceText(\n        currentState.getCurrentContent(),\n        currentState.getSelection(),\n        \"    \"\n      );\n    }\n    this.setState({\n      editorState: Draft.EditorState.push(\n        currentState,\n        newContentState,\n        \"insert-characters\"\n      )\n    });\n  };\n\n  getCurrentLine = () => {\n    const currentBlockKey = this.state.editorState.getSelection().getStartKey();\n    const currentBlockIndex = this.state.editorState\n      .getCurrentContent()\n      .getBlockMap()\n      .keySeq()\n      .findIndex(k => k === currentBlockKey);\n    return currentBlockIndex;\n  };\n\n  findScopeIndentationOfLine = lineNum => {\n    let spaces = \"\"\n    for(let i = 0; i < lineNum; ++i){\n      const lineText = this.getLineText(i)\n      if(this.lineStartedScope(lineText)){\n        spaces += \"    \"\n      }\n      if(this.lineEndedScope(lineText)){\n        if(spaces.length > 0)\n          spaces = spaces.substring(0, spaces.length-4)\n      }\n    }\n    return spaces\n  }\n\n  lineStartedScope = prevLine => {\n    return prevLine.match(/\\b(def|if|while|for|do)\\b/g) !== null;\n  };\n\n  lineEndedScope = prevLine => {\n    return prevLine.match(/\\b(end)\\b/g) !== null;\n  };\n\n  getLineText = lineNum => {\n    let content = this.state.editorState.getCurrentContent().getBlocksAsArray()[\n      lineNum\n    ];\n    if (content) {\n      return content.text;\n    }\n    return null;\n  };\n\n  checkForKeys = () => {\n\n    if (this.state.lastWasReturn) {\n      this.handleReturn();\n    } else if (this.state.lastWasD) {\n      this.setState({ lastWasD: false });\n      const result = this.checkForEndKey();\n      //if found keyword 'end' or 'else, elsif' needs reverse Tab\n      if (result !== 0) {\n        this.unIndentLine(this.getCurrentLine(), result)\n      }\n    }\n  };\n\n  unIndentLine = (currentLine, result) => {\n    let spaces = this.findScopeIndentationOfLine(currentLine);\n    const indentLength = spaces.length - 4 < 0 ? 0: spaces.length - 4;\n    const lineText = this.getLineText(currentLine)\n    const offset = lineText.search(/\\S/);\n    this.reverseTab(result, offset-indentLength);\n  }\n\n  checkPossibleSuggestions = () => {\n    const currentWord = this.getCurrentWord();\n    if (currentWord === \"\") return;\n    const suggestions = [];\n    variableNames.forEach(function(variable) {\n      if (variable.includes(currentWord)) {\n        suggestions.push(variable);\n      }\n    });\n\n    this.setState({\n      possibleSuggestions: suggestions\n    });\n  };\n\n\n  hideShowSolution = (solutionShow) => {\n    let nextEditorContent, editor;\n    if(solutionShow){\n      editor = solution_editors[this.props.problemIndex];\n      nextEditorContent = createWithRawContent(editor)\n    } else {\n      editor = this.props.default_editors[this.props.problemIndex];\n      nextEditorContent = createWithRawContent(editor)\n    }\n    this.setState({\n      editorState: nextEditorContent,\n      lineNums: editor.blocks.length\n    });\n  }\n\n  toggleSolution = () => {\n    const newShow = !this.state.solutionShow\n    this.setState({ solutionShow: newShow}, this.hideShowSolution(newShow))\n  }\n\n  render() {\n    const lineNumsOutput = [];\n    const { possibleSuggestions } = this.state;\n    for (let i = 1; i <= this.state.lineNums; ++i) {\n      lineNumsOutput.push(\n        <div className=\"line-number\" key={i.toString()}>\n          {i.toString()}\n        </div>\n      );\n    }\n\n\n    return (\n        <div className=\"editor\">\n          <div className=\"editor-buttons\">\n            <button className=\"run-button\" onClick={() => this.props.handleRunCode(this.state.editorState.getCurrentContent())}>Run Code</button>\n            <button className=\"solution-button\" onClick={() => this.toggleSolution()}>\n            {!this.state.solutionShow ? <span>Show Solution</span>: <span>Hide Solution</span>}\n            </button>\n          </div>\n          <div className=\"editor-box\">\n            <div className=\"side-numbers\">{lineNumsOutput}</div>\n            <Draft.Editor\n              editorState={this.state.editorState}\n              onChange={this.editorStateChanged}\n              onTab={this.handleTab}\n              keyBindingFn={this.keyBindingFn}\n            />\n\n          </div>\n        </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"../css/App.css\";\n\nexport default class ProblemSuggestion extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selected: this.props.selected,\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    if(prevProps.selected !== this.props.selected){\n        this.setState({\n            selected: this.props.selected\n        });\n    }\n  }\n\n  handleClick = () => {\n    this.props.callback(this.props.index)\n  }\n\n  render(){\n    const selectedStyle = this.state.selected ? \"selected-item\" : \"\";\n    return (\n      <div className={`problem-list-item ${selectedStyle}`} onClick={() => this.handleClick()}>\n        {this.props.problemName}\n      </div>\n    )\n  }\n}\n","export const descriptions = [\n  {\n    content: \"Given an array of integers, return indices of the two numbers such that they add up to a specific target. You may assume that each input would have exactly one solution, and you may not use the same element twice.\",\n    example: \"Given nums = [2, 7, 11, 15], target = 9, Because nums[0] + nums[1] = 2 + 7 = 9, return [0, 1].\"\n  },\n  \n  {\n    content: \"Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. For the purpose of this problem, we define empty string as valid palindrome.\",\n    example: `Input: \"A man, a plan, a canal: Panama\"\nOutput: true`\n  },\n  {\n    content: \"Given two strings s and t , write a function to determine if t is an anagram of s.\",\n    example: `Input: s = \"anagram\", t = \"nagaram\"\nOutput: true`\n  },\n  {\n    content: `Write a function that reverses a string. The input string is given as an array of characters`,\n    example: `Input: [\"h\",\"e\",\"l\",\"l\",\"o\"]\nOutput: [\"o\",\"l\",\"l\",\"e\",\"h\"]`\n  },\n\n\n]\n","import React from \"react\";\nimport ProblemSuggestion from \"./ProblemSuggestion.js\"\nimport \"../css/App.css\";\nimport {problem_names} from '../helpers/default_problems'\nimport {descriptions} from '../helpers/descriptions'\n\n\nexport default class ProblemSuggestions extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      problems: problem_names,\n      clickedProblem: this.props.problemIndex\n    }\n  }\n\n  handleProblemChange = (index) => {\n    this.setState({\n      clickedProblem: index\n    })\n    this.props.callback(index);\n  }\n\n  render(){\n    return (\n\n      <div className=\"problems-list\">\n        {this.state.problems.map((problem, index) => (\n          <ProblemSuggestion\n            callback={this.handleProblemChange}\n            selected={this.state.clickedProblem === index}\n            problemName={this.state.problems[index]}\n            index={index}\n          />\n        ))}\n        <div className=\"problem-description\">\n           <p>\n            {descriptions[this.state.clickedProblem].content}\n           </p>\n           <h5>Example: </h5>\n           <p>\n            {descriptions[this.state.clickedProblem].example}\n           </p>\n        </div>\n      </div>\n    )\n  }\n}\n","import * as React from \"react\";\nimport * as Draft from \"draft-js\";\n\nexport default class SelectionStateView extends React.Component {\n  state = {\n    editorState: Draft.EditorState.createEmpty(),\n    offset: 0,\n    endOffset: 0,\n    lastWasD: false\n  };\n\n  editorStateChanged = (newEditorState: Draft.EditorState) => {\n    this.setState({ editorState: newEditorState }, this.checkForDKey);\n  };\n\n  get selectionState() {\n    // the editorState ahs a setSelection() method to get the selection\n    const selectionState = this.state.editorState.getSelection();\n\n    // sample of some data we can get from the selection state\n    const offset = selectionState.getAnchorOffset();\n    const focusOffset = selectionState.getFocusOffset();\n    const isBackwards = selectionState.getIsBackward();\n    return {\n      offset,\n      focusOffset,\n      isBackwards\n    };\n  }\n\n  setSelection = (offset: number, focusOffset: number) => {\n    console.log('offset', offset);\n    console.log('offset Focus', focusOffset);\n    const { editorState } = this.state;\n    const selectionState = editorState.getSelection();\n\n    // we cant set the selection state directly because its immutable.\n    // so make a copy\n    const newSelection = selectionState.merge({\n      anchorOffset: offset,\n      focusOffset: focusOffset\n    })\n\n    // Draft API helper set the selection into a new editorState\n    const newEditorState = Draft.EditorState.forceSelection(editorState, newSelection);\n\n    // update the editorState\n    this.editorStateChanged(newEditorState);\n  };\n\n  checkForDKey = () => {\n    if(this.state.lastWasD){\n      this.setState({lastWasD: false})\n      this.setSelection(3, 5);\n    }\n  }\n\n  keyBindingFn = (e: SyntheticKeyboardEvent): string => {\n    if (e.keyCode === 68) {  // key: D\n      this.setState({lastWasD: true})\n      //check if end is only word on line\n      // if(this.checkForEndKey())\n        // this.reverseTab(2)\n    }\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"editor\">\n          <Draft.Editor editorState={this.state.editorState} onChange={this.editorStateChanged}\n          keyBindingFn={this.keyBindingFn}\n\n          />\n        </div>\n\n        <div className=\"form-horizontal col-sm-12\">\n          <div className=\"form-group\">\n            <label htmlFor=\"data\" className=\"control-label col-sm-6\">\n              offset\n            </label>\n            <label htmlFor=\"data\" className=\"control-label col-sm-6\">\n              {this.selectionState.offset}\n            </label>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"data\" className=\"control-label col-sm-6\">\n              Focus Offset\n            </label>\n            <label htmlFor=\"data\" className=\"control-label col-sm-6\">\n              {this.selectionState.focusOffset}\n            </label>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"data\" className=\"control-label col-sm-6\">\n              is backwards\n            </label>\n            <label htmlFor=\"data\" className=\"control-label col-sm-6\">\n              {this.selectionState.isBackwards ? \"true\" : \"false\"}\n            </label>\n          </div>\n          <SetSelectionForm callback={this.setSelection} />\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass SetSelectionForm extends React.Component {\n  state = {\n    offset: 0,\n    focusOffset: 0\n  };\n  render() {\n    return (\n      <div className=\"selection-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"data\" className=\"control-label col-sm-6\">\n            offset\n          </label>\n          <div className=\"col-sm-6\">\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"data\"\n              placeholder=\"data to save\"\n              value={this.state.offset}\n              onChange={e => this.setState({ offset: Number.parseInt(e.target.value) })}\n            />\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"data\" className=\"control-label col-sm-6\">\n            end offset\n          </label>\n          <div className=\"col-sm-6\">\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"data\"\n              placeholder=\"data to save\"\n              value={this.state.focusOffset}\n              onChange={e => this.setState({ focusOffset: Number.parseInt(e.target.value) })}\n            />\n          </div>\n        </div>\n        <button\n          className=\"button col-sm-3 col-sm-offset-8\"\n          onClick={() => this.props.callback(this.state.offset, this.state.focusOffset)}\n        >\n          set selection state\n        </button>\n      </div>\n    );\n  }\n}\n","export const default_editors = [\n  {\n    entityMap: {},\n    blocks: [\n      {\n        key: \"5h45a\",\n        text: \"# @param {Interger Array} arr, {Integer} target\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45b\",\n        text: \"# @return {Integer Array}\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n\n      {\n        key: \"5h45l\",\n        text: \"def two_sum(arr, target)\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45r\",\n        text: \"    \",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45x\",\n        text: \"    \",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45t\",\n        text: \"end\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      }\n    ]\n  },\n  {\n    entityMap: {},\n    blocks: [\n      {\n        key: \"5h45a\",\n        text: \"# @param {String} word\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45b\",\n        text: \"# @return {Boolean}\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45l\",\n        text: \"def check_palindrome(word)\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45r\",\n        text: \"    \",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45x\",\n        text: \"    \",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45t\",\n        text: \"end\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      }\n    ]\n  },\n  {\n    entityMap: {},\n    blocks: [\n      {\n        key: \"5h45a\",\n        text: \"# @param {String} mixedWord, {String} word\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45b\",\n        text: \"# @return {Boolean}\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n\n      {\n        key: \"5h45l\",\n        text: \"def check_anagram(mixedWord, word)\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45r\",\n        text: \"    \",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45x\",\n        text: \"    \",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45t\",\n        text: \"end\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      }\n    ]\n  },\n  {\n    entityMap: {},\n    blocks: [\n      {\n        key: \"5h45a\",\n        text: \"# @param {Interger array []} arr\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45b\",\n        text: \"# @return {Integer array []}\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45l\",\n        text: \"def reverse(arr)\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45r\",\n        text: \"    \",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45x\",\n        text: \"    \",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      },\n      {\n        key: \"5h45t\",\n        text: \"end\",\n        type: \"unstyled\",\n        depth: 0,\n        entityRanges: [],\n        data: {}\n      }\n    ]\n  },\n];\n","export const testInputs = [\n  [\"([3, 3, 1], target=6)\", \"([-4, 6, -8, 1], target=-3)\", \"([-3, -2, -1, -9], target=-10)\"],\n  [\"tower\", \"hannah\", \"A man, a plan, a canal: Panama\"],\n  [\"(\\\"eroh\\\", \\\"hero\\\")\", \"(\\\"HleOl\\\", \\\"HellO\\\")\", \"(\\\"not\\\", \\\"aword\\\")\"],\n  [\"[1,2,3]\", \"[1,2,3,4]\", \"[-1, -2, -3]\"]\n\n]\n\nexport const testDescriptions = [\n  [\"All Positive Numbers\", \"Includes Negative Numbers\", \"All Negative\"],\n  [\"Not an Palindrome\", \"All Lowercase Letters\", \"Mixed Cases and Includes Punctuation\"],\n  [\"All lowercase\", \"Mix of Cases\", \"Not an Anagram\"],\n  [\"Simple increasing array\", \"Jumbled Array\", \"Array with Negative Numbers\"]\n]\n\nexport const expectedOutputs = [\n  [\"[0, 1]\", \"[0, 3]\", \"[2, 3]\"],\n  [\"false\", \"true\", \"true\"],\n  [\"true\", \"true\",\"false\"],\n  [\"[3, 2, 1]\", \"[4, 6, 8, 1]\", \"[-3, -2, -1]\"]\n]\n","import React, { Component } from \"react\";\nimport \"../css/App.css\";\nimport Editor from \"./Editor\";\nimport ProblemSuggestions from \"./ProblemSuggestions\";\nimport * as Draft from \"draft-js\";\nimport axios from 'axios'\nimport Test from \"./Test\";\nimport {default_editors} from '../helpers/default_editors.js'\nimport {default_problems, problem_names} from '../helpers/default_problems.js'\nimport {testInputs, expectedOutputs, testDescriptions} from '../helpers/test_params.js'\nimport Grid from '@material-ui/core/Grid';\nimport Loader from 'react-loader-spinner'\n\nclass EditorControl extends Component {\n  constructor(props){\n    super(props)\n    console.log(this.props.selectedProblem);\n    this.state = {\n      currentProblem: this.props.selectedProblem,\n      codeOutput: \"\",\n      savedTests: [\"\", \"\", \"\", \"\", \"\"],\n      loading: false,\n      firstCallToAPi: true,\n      savedEditors: default_editors\n    }\n  }\n\n  handleRunCode = (currentEditor) => {\n    const rawJson = Draft.convertToRaw(currentEditor);\n    const pid = this.state.currentProblem;\n    this.setState({ loading: true })\n    axios.post('https://ruby-runner-api.herokuapp.com/run', ({function_name: default_problems[pid].toLowerCase(), content: rawJson, problem_index: this.state.currentProblem}))\n    // axios.post('http://localhost:3000/run/', ({function_name: default_problems[pid].toLowerCase(), content: rawJson, problem_index: this.state.currentProblem}))\n         .then(response => {\n           this.setState({\n             loading: false,\n             firstCallToAPi: false\n           })\n           console.log('response ', response.data);\n           this.formatCodeOutput(response.data)\n         })\n         .catch(error => {\n           this.setState({\n             codeOutput: \"Server Error\",\n             loading: false,\n             firstCallToAPi: false\n           })\n           console.log('error', error.response)\n         })\n  }\n\n  formatCodeOutput = (tests) => {\n    let output = [];\n    let passedCount = 0;\n    let failedCount = 0\n\n    tests.forEach((test, index) => {\n      let testInput = testInputs[this.state.currentProblem][index];\n      let testDescription = testDescriptions[this.state.currentProblem][index]\n      let testOutput = test ? test: \"No output or return statement\";\n      let expectedOutput = expectedOutputs[this.state.currentProblem][index];\n      let passedTest = expectedOutput == testOutput\n      if(passedTest){\n        ++passedCount;\n      } else {\n        ++failedCount;\n      }\n      const testColor = passedTest ? \"green\": \"red\"\n\n      output.push(<p >Test Description: {testDescription}</p>)\n      output.push(<p >Input: {testInput}</p>)\n      output.push(<p style={{color: testColor}}>Expected Output: {expectedOutput}</p>)\n      output.push(<p style={{color: testColor}}>Output: {testOutput}</p>)\n      output.push(<br/>)\n    })\n    const passedColor = failedCount === 0 ? \"green\": \"red\";\n    output.unshift(<p > Tests Passed:\n      <span style={{color: passedColor}}>{passedCount}/{passedCount + failedCount}</span>\n      <br/></p>)\n    this.setState({ codeOutput: output})\n  }\n\n\n  handleProblemChange = (newIndex) => {\n    const {currentProblem, savedTests, codeOutput} = this.state\n    const newSavedTests = savedTests.slice()\n    newSavedTests[currentProblem] = codeOutput\n    const newOutput = savedTests[newIndex]\n    this.setState({\n      currentProblem: newIndex,\n      codeOutput: newOutput,\n      savedTests: newSavedTests,\n    })\n  }\n\n  handleSaveEditor = (editorToSave, problemIndex) => {\n    const editors = this.state.savedEditors.slice()\n    editors[problemIndex] = editorToSave\n    this.setState({\n      savedEditors: editors\n    })\n  }\n        //  <span>Loading: takes a few seconds for the server to start at first</span>\n        // <CodeRunner  savedTests={this.state.savedTests[this.state.currentProblem]} codeOutput={this.state.codeOutput} />\n  render(){\n    return (\n\n      <div className=\"editor-container\">\n        <Grid container direction=\"row\">\n          <Grid item xs>\n            <ProblemSuggestions callback={this.handleProblemChange} problemIndex={this.state.currentProblem}/>\n          </Grid>\n          <Grid item xs={6}>\n            <Editor handleRunCode={this.handleRunCode}\n              default_editors={this.state.savedEditors}\n              handleSaveEditor={this.handleSaveEditor}\n              problemIndex={this.state.currentProblem}\n            />\n          </Grid>\n          <Grid item xs>\n            <div className=\"code-runner\">\n              <div className=\"test-output\">\n                {this.state.loading ? (<div\n                   style={{\n                      width: \"100%\",\n                      height: \"100\",\n                      display: \"block\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\"\n                    }}\n                    >\n                    <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\n                    {this.state.firstCallToAPi && <p> Starting the server: Might take a few seconds</p>}\n                    </div>):\n                (this.state.codeOutput ? this.state.codeOutput: (<span style={{color: \"grey\"}}>Run some code to display tests</span>))}\n              </div>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default EditorControl;\n","import React, { Component } from \"react\";\nimport \"../css/App.css\";\nimport * as Draft from \"draft-js\";\nimport axios from 'axios'\nimport Navbar from \"./Navbar\";\nimport ProblemsList from './ProblemsList'\nimport EditorControl from './EditorControl';\nimport Grid from '@material-ui/core/Grid';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      selectedProblem: 0,\n      currentPage: \"problemsList\"\n    }\n  }\n\n  componentWillMount() {\n    //start the server, to reduce lag\n    axios.get('https://ruby-runner-api.herokuapp.com/contents')\n          .then(console.log('server started'))\n          .catch(error => {\n            console.log('server error on start');\n          })\n  }\n\n  changePage = (pageName) => {\n    this.setState({currentPage: pageName})\n  }\n\n  loadProblem = (problemNumber) => {\n    this.setState({\n      currentPage: \"editor\",\n      selectedProblem: problemNumber\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"app-container\">\n        <Grid container direction=\"column\" spacing={30}>\n          <Grid item xs={12}>\n            <Navbar changePage={this.changePage}/>\n          </Grid>\n          <Grid item xs={12}>\n            {this.state.currentPage === \"problemsList\" && <ProblemsList loadProblem={this.loadProblem}/>}\n            {this.state.currentPage === \"editor\" && <EditorControl selectedProblem={this.state.selectedProblem}/>}\n          </Grid>\n          <Grid item xs={12}>\n            <footer>\n            </footer>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}